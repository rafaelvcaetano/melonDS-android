name: LCD
textureFiltering: NEAREST

[vertex]
attribute vec2 vPos;
attribute vec2 vUV;
attribute float vAlpha;
varying vec2 uv;
varying float alpha;
varying vec2 omega;
void main() {
    gl_Position = vec4(vPos, 0.0, 1.0);
    uv = vUV;
    alpha = vAlpha;
    omega = 3.141592654 * 2.0 * vec2(256, 384);
}
[/vertex]

[fragment]
#ifdef GL_FRAGMENT_PRECISION_HIGH
precision highp float;
#else
precision mediump float;
#endif
uniform sampler2D tex;
varying vec2 uv;
varying float alpha;
varying vec2 omega;
/* configuration (higher values mean brighter image but reduced effect depth) */
const float brighten_scanlines = 16.0;
const float brighten_lcd = 4.0;
const vec3 offsets = 3.141592654 * vec3(1.0/2.0,1.0/2.0 - 2.0/3.0,1.0/2.0-4.0/3.0);
void main() {
    vec2 angle = uv * omega;
    float yfactor = (brighten_scanlines + sin(angle.y)) / (brighten_scanlines + 1.0);
    vec3 xfactors = (brighten_lcd + sin(angle.x + offsets)) / (brighten_lcd + 1.0);
    gl_FragColor.rgb = yfactor * xfactors * texture2D(tex, uv).bgr;
    gl_FragColor.a = alpha;
}
[/fragment]
